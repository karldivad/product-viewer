{"version":3,"file":"product-viewer-base.js","sourceRoot":"","sources":["../src/product-viewer-base.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2022 Lowe's Companies, Inc. All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport \"@babylonjs/loaders\";\nimport { Engine, Scene, Camera, AbstractMesh, Tools, IScreenshotSize } from \"@babylonjs/core\";\nimport { LitElement, TemplateResult, CSSResultGroup } from \"lit\";\nimport { ResizeObserver as Polyfill, ResizeObserverEntry } from \"@juggle/resize-observer\";\nimport { style, template } from \"./template\";\n//import { property } from \"lit/decorators.js\";\n\n// Use native resize observer for better perf if available\nconst ResizeObserver = window.ResizeObserver || Polyfill;\n\nexport default class ProductViewerElementBase extends LitElement {\n\tviewerWrapper: HTMLDivElement;\n\trenderCanvas: HTMLCanvasElement;\n\tengine: Engine;\n\tscene: Scene;\n\tcamera: Camera;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\t// Lit element styles that get applied to the template in the render() function\n\tstatic get styles(): CSSResultGroup {\n\t\treturn [style];\n\t}\n\n\tinitBabylon(): void {\n\t\tthis.renderCanvas = this.shadowRoot.querySelector(\".renderCanvas\");\n\t\tthis.viewerWrapper = this.shadowRoot.querySelector(\".viewerWrapper\");\n\n\t\t// initialize babylon scene and engine\n\t\tthis.engine = new Engine(this.renderCanvas, true, { preserveDrawingBuffer: true, stencil: true }, true);\n\t\tthis.scene = new Scene(this.engine);\n\n\t\t// Update the pixel density to look sharp on high DPI screens (mobile devices)\n\t\tconst scaleLevel = 1 / window.devicePixelRatio;\n\t\tthis.engine.setHardwareScalingLevel(scaleLevel);\n\n\t\tconst resizeObserver = new ResizeObserver((entries: Array<ResizeObserverEntry>) => {\n\t\t\t// Set the new size of resized elements\n\t\t\tfor (const entry of entries) {\n\t\t\t\tif (entry.target === this) {\n\t\t\t\t\tthis.renderCanvas.height = entry.contentRect.height;\n\t\t\t\t\tthis.renderCanvas.width = entry.contentRect.width;\n\t\t\t\t\tthis.viewerWrapper.style.height = `${entry.contentRect.height}px`;\n\t\t\t\t\tthis.viewerWrapper.style.width = `${entry.contentRect.width}px`;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.engine.resize();\n\t\t\tthis.scene.render(); // Render the scene after resizing to prevent white flicker\n\t\t});\n\t\tresizeObserver.observe(this);\n\n\t\t// run the main render loop\n\t\tthis.engine.runRenderLoop(() => {\n\t\t\tif (this.camera) this.scene.render();\n\t\t});\n\t}\n\n\tmodelLoaded(meshes: AbstractMesh[]): void {\n\t\tconsole.log(`${meshes.length} mesh(es) loaded`);\n\t}\n\n\t// Fired on each property update. changedProperties includes the previous values\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tupdated(changedProperties: Map<string, any>): void {\n\t\tsuper.updated?.(changedProperties);\n\n\t\t//if (changedProperties.has('viewerProps') && this.viewerProps != null) {\n\t\tthis.updateRenderer();\n\t\t//}\n\t}\n\n\trender(): TemplateResult {\n\t\treturn template(this);\n\t}\n\n\tupdateRenderer(): void {\n\t\tif (this.engine) this.engine.resize();\n\t\telse this.initBabylon();\n\t}\n\n\ttakeScreenshot(size?: IScreenshotSize): Promise<string | null> {\n\t\tif (this.engine) {\n\t\t\tconst { width, height } = this.renderCanvas;\n\t\t\tconst screenshotSize = size ?? { width, height };\n\t\t\treturn Tools.CreateScreenshotAsync(this.engine, null, screenshotSize);\n\t\t} else {\n\t\t\tconsole.warn(\"Unable to take screenshot because engine does not exist\");\n\t\t\treturn null;\n\t\t}\n\t}\n}\n"]}