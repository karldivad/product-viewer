{"version":3,"file":"ScaleReference.js","sourceRoot":"","sources":["../../src/features/ScaleReference.ts"],"names":[],"mappings":";;;;;;AAAA;;;;;;;;;;;;;;;;;;;;GAoBG;AACH,OAAO,EAA6B,WAAW,EAAE,MAAM,iBAAiB,CAAC;AACzE,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE7C,OAAO,EAAe,cAAc,EAAE,MAAM,gBAAgB,CAAC;AAM7D,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAClC,iBAAoB,EACuB,EAAE;IAC7C,MAAM,2BAA4B,SAAQ,iBAAiB;QAM1D,OAAO,CAAC,iBAAmC;;YAC1C,MAAA,KAAK,CAAC,OAAO,qDAAG,iBAAiB,CAAC,CAAC;YAEnC,IAAI,iBAAiB,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE;gBACzC,IAAI,CAAC,oBAAoB,EAAE,CAAC;aAC5B;QACF,CAAC;QAED,WAAW,CAAC,MAAsB;YACjC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAE1B,gFAAgF;YAChF,6BAA6B;YAC7B,IAAI,CAAC,gBAAgB,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAElD,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACrC,CAAC;QAED,4BAA4B;YAC3B,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBAC1E,MAAM,gBAAgB,GAAG,cAAc,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;gBAElE,8EAA8E;gBAC9E,MAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,GAAG,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC;gBACvF,wGAAwG;gBACxG,MAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,GAAG,gBAAgB,CAAC,YAAY,CAAC,CAAC,GAAG,GAAG,CAAC;gBAE7F,4EAA4E;gBAC5E,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,IAAI,OAAO,CAAC;gBAC/C,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,IAAI,OAAO,CAAC;aAC/C;QACF,CAAC;QAED,oBAAoB;;YACnB,IAAI,IAAI,CAAC,WAAW,EAAE;gBACrB,WAAW,CAAC,UAAU,CACrB,EAAE,EACF,IAAI,CAAC,WAAW,EAChB,EAAE,EACF,IAAI,CAAC,KAAK,EACV,CAAC,MAAM,EAAE,EAAE;oBACV,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;oBACrC,IAAI,CAAC,4BAA4B,EAAE,CAAC;gBACrC,CAAC,EACD,IAAI,EACJ,IAAI,EACJ,MAAM,CACN,CAAC;aACF;iBAAM;gBACN,MAAA,IAAI,CAAC,mBAAmB,0CAAE,OAAO,EAAE,CAAC;aACpC;QACF,CAAC;KACD;IAzDuE;QAAtE,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;oEAAsB;IA2D7F,OAAO,2BAAuE,CAAC;AAChF,CAAC,CAAC","sourcesContent":["/* @license\n * Copyright 2022 Lowe's Companies, Inc. All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { AbstractMesh, BoundingBox, SceneLoader } from \"@babylonjs/core\";\nimport { property } from \"lit/decorators.js\";\nimport ProductViewerElementBase from \"../product-viewer-base\";\nimport { Constructor, getBoundingBox } from \"../tools/Utils\";\n\nexport declare interface ScaleReferenceInterface {\n\tscaleRefUrl?: string;\n}\n\nexport const ScaleReferenceMixin = <T extends Constructor<ProductViewerElementBase>>(\n\tBaseViewerElement: T,\n): Constructor<ScaleReferenceInterface> & T => {\n\tclass ScaleReferenceViewerElement extends BaseViewerElement {\n\t\t@property({ type: String, attribute: \"scale-ref-url\", reflect: true }) scaleRefUrl?: string;\n\n\t\tscaleReferenceModel: AbstractMesh;\n\t\tmodelBoundingBox: BoundingBox;\n\n\t\tupdated(changedProperties: Map<string, any>): void {\n\t\t\tsuper.updated?.(changedProperties);\n\n\t\t\tif (changedProperties.has(\"scaleRefUrl\")) {\n\t\t\t\tthis.updateScaleReference();\n\t\t\t}\n\t\t}\n\n\t\tmodelLoaded(meshes: AbstractMesh[]): void {\n\t\t\tsuper.modelLoaded(meshes);\n\n\t\t\t// NOTE: this is the bounding box of the model loaded using the `model-url` attr\n\t\t\t// (not the scale reference).\n\t\t\tthis.modelBoundingBox = getBoundingBox(meshes[0]);\n\n\t\t\tthis.updateScaleReferencePosition();\n\t\t}\n\n\t\tupdateScaleReferencePosition(): void {\n\t\t\tif (this.scaleRefUrl && this.scaleReferenceModel && this.modelBoundingBox) {\n\t\t\t\tconst scaleBoundingBox = getBoundingBox(this.scaleReferenceModel);\n\n\t\t\t\t// offset scale reference so that it is placed on the ground (same as product)\n\t\t\t\tconst offsetY = this.modelBoundingBox.minimumWorld.y - scaleBoundingBox.minimumWorld.y;\n\t\t\t\t// move the scale reference behind the product so it's bounding box clears (+ a small arbitrary spacing)\n\t\t\t\tconst offsetZ = this.modelBoundingBox.minimumWorld.z - scaleBoundingBox.maximumWorld.z - 0.2;\n\n\t\t\t\t// TODO: allow the user to optionally pass in custom offsets for x, y, and z\n\t\t\t\tthis.scaleReferenceModel.position.y += offsetY;\n\t\t\t\tthis.scaleReferenceModel.position.z += offsetZ;\n\t\t\t}\n\t\t}\n\n\t\tupdateScaleReference(): void {\n\t\t\tif (this.scaleRefUrl) {\n\t\t\t\tSceneLoader.ImportMesh(\n\t\t\t\t\t\"\",\n\t\t\t\t\tthis.scaleRefUrl,\n\t\t\t\t\t\"\",\n\t\t\t\t\tthis.scene,\n\t\t\t\t\t(meshes) => {\n\t\t\t\t\t\tthis.scaleReferenceModel = meshes[0];\n\t\t\t\t\t\tthis.updateScaleReferencePosition();\n\t\t\t\t\t},\n\t\t\t\t\tnull,\n\t\t\t\t\tnull,\n\t\t\t\t\t\".glb\",\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.scaleReferenceModel?.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\treturn ScaleReferenceViewerElement as Constructor<ScaleReferenceInterface> & T;\n};\n"]}