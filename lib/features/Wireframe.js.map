{"version":3,"file":"Wireframe.js","sourceRoot":"","sources":["../../src/features/Wireframe.ts"],"names":[],"mappings":";;;;;;AAsBA,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAO7C,MAAM,CAAC,MAAM,cAAc,GAAG,CAC7B,iBAAoB,EACkB,EAAE;IACxC,MAAM,sBAAuB,SAAQ,iBAAiB;QAAtD;;YACqE,cAAS,GAAG,KAAK,CAAC;QAYvF,CAAC;QAVA,OAAO,CAAC,iBAAmC;;YAC1C,MAAA,KAAK,CAAC,OAAO,qDAAG,iBAAiB,CAAC,CAAC;YACnC,IAAI,iBAAiB,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE;gBACvC,IAAI,CAAC,eAAe,EAAE,CAAC;aACvB;QACF,CAAC;QAED,eAAe;YACd,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC;QAC5C,CAAC;KACD;IAZoE;QAAnE,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;6DAAmB;IAcvF,OAAO,sBAA6D,CAAC;AACtE,CAAC,CAAC","sourcesContent":["/* @license\n * Copyright 2022 Lowe's Companies, Inc. All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport ProductViewerElementBase from \"../product-viewer-base\";\nimport { property } from \"lit/decorators.js\";\nimport { Constructor } from \"../tools/Utils\";\n\nexport declare interface WireframeInterface {\n\twireframe: boolean;\n}\n\nexport const WireframeMixin = <T extends Constructor<ProductViewerElementBase>>(\n\tBaseViewerElement: T,\n): Constructor<WireframeInterface> & T => {\n\tclass WireframeViewerElement extends BaseViewerElement {\n\t\t@property({ type: Boolean, attribute: \"wireframe\", reflect: true }) wireframe = false;\n\n\t\tupdated(changedProperties: Map<string, any>): void {\n\t\t\tsuper.updated?.(changedProperties);\n\t\t\tif (changedProperties.has(\"wireframe\")) {\n\t\t\t\tthis.updateWireframe();\n\t\t\t}\n\t\t}\n\n\t\tupdateWireframe() {\n\t\t\tthis.scene.forceWireframe = this.wireframe;\n\t\t}\n\t}\n\n\treturn WireframeViewerElement as Constructor<WireframeInterface> & T;\n};\n"]}